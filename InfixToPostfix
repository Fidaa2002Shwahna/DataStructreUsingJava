package infixexpressiontopostfix;

import java.util.ArrayDeque;
import java.util.Deque;

public class InfixExpressionToPostfix {

    public static int prec(char c) {
        if (c == '+' || c == '-') {
            return 1;
        } else if (c == '*' || c == '/') {
            return 2;
        } else if (c == '^') {
            return 3;
        }

        return -1;
    }

    public static String InfixToPostfix(String str) {
        String res = "";
        Deque<Character> stack = new ArrayDeque<Character>();

        for (int i = 0; i < str.length(); i++) {
            char c = str.charAt(i);
            if (Character.isLetterOrDigit(c)) {
                res += c;
            } else if (c == '(') {
                stack.push(c);
            } else if (c == ')') {
                while (!stack.isEmpty() && stack.peek() != '(') {
                    res += stack.peek();
                    stack.pop();
                }

                stack.pop();

            } else {
                while (!stack.isEmpty() && prec(c) <= prec(stack.peek())) {
                    res += stack.peek();
                    stack.pop();
                }
                stack.push(c);
            }
        }
        while (!stack.isEmpty()) {
            if (stack.peek() == '(') {
                return "not vaild expression";
            }
            res += stack.peek();
            stack.pop();
        }

        return res;
    }

    public static void main(String[] args) {
        String exp = "a+b*(c^d-e)^(f+g*h)-i";

        // Function call
        System.out.println(InfixToPostfix(exp));
    }

}
